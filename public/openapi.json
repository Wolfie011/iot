{
  "openapi": "3.0.0",
  "info": {
    "title": "IIoT API Documentation",
    "version": "0.0.1-beta",
    "description": "Comprehensive API reference for Industrial IoT backend services"
  },
  "paths": {
    "/api/auth/activate": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Activate user account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivationInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account activated"
          },
          "400": {
            "description": "Validation or unauthorized"
          }
        }
      }
    },
    "/api/auth/signin": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Sign in user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login"
          },
          "400": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/api/auth/signout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Sign out current user",
        "responses": {
          "200": {
            "description": "Signed out"
          },
          "400": {
            "description": "No active session"
          }
        }
      }
    },
    "/api/auth/signup": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Account created"
          },
          "400": {
            "description": "Validation or conflict error"
          }
        }
      }
    },
    "/api/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User data"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update user by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete user by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted"
          }
        }
      }
    },
    "/api/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get paginated list of users",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "List of users"
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created"
          }
        }
      }
    }
  },
  "components": {},
  "tags": []
}